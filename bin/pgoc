#!/usr/bin/env bash

if [ -f .PGO_VERSION ]; then
  PGO_VERSION=$(<.PGO_VERSION)
else
  PGO_VERSION=latest
fi

PORT=2222

rm -f get_pgoc.sh

function pgoc_start() {

  if [ ! "$(docker ps -q -f name=pgoc-${PGO_VERSION})" ]; then
    printf '%s\n' "Starting Playground One Container"

      # --volume /etc/timezone:/etc/timezone \
    docker run \
      --rm \
      --detach \
      --name=pgoc-${PGO_VERSION} \
      --env DEBIAN_FRONTEND=noninteractive \
      --publish ${PORT}:22 \
      --volume $(pwd)/workdir:/home/pgo \
      --volume /var/run/docker.sock:/var/run/docker.sock \
      mawinkler/pgoc:${PGO_VERSION}
    sleep 2
  fi

  printf '\n%s\n' "Connect:  ssh -p ${PORT} pgo@localhost"
  printf '%s\n' "Password: pgo"
}

function pgoc_stop() {

  if [ "$(docker ps -q -f name=pgoc-${PGO_VERSION})" ]; then
    printf '%s\n' "Stopping Playground One Container"
    docker stop pgoc-${PGO_VERSION}
  fi
}

function pgoc_update() {
  if [ -d workdir ]; then
    if [ -f workdir/playground-one/config.yaml ]; then
      cp workdir/playground-one/config.yaml .
      mv workdir workdir-$(date +%s)
    fi
  fi
  if [ ! -d workdir ]; then
    printf '%s\n' "Pulling Playground One Container"
    docker pull mawinkler/pgoc:${PGO_VERSION}

    IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "mawinkler/pgoc:${PGO_VERSION}")
    printf '%s\n' "Starting Playground One Container from image ${IMAGE}"
    docker run -d --rm --name=pgoc-${PGO_VERSION} ${IMAGE} -c "/bin/sleep 60"

    printf '%s\n' "Fetch Home Directory from Container"
    CONTAINER=$(docker ps --format "{{.ID}}" --filter "name=pgoc-${PGO_VERSION}")
    docker cp ${CONTAINER}:/tmp/home.tgz .

    printf '%s\n' "Stopping Playground One Container"
    docker stop ${CONTAINER}

    printf '%s\n' "Populating workdir"
    mkdir -p workdir
    tar xpzf home.tgz --strip-components=2 -C ./workdir

    rm -f home.tgz

    if [ ! -d workdir/.aws ]; then
      if [ -d ~/.aws ]; then
        printf '%s\n' "Copy AWS credentials to workdir"
        cp -r ~/.aws workdir/
      fi
    fi

    if [ ! -f workdir/playground-one/config.yaml ]; then
      if [ -f config.yaml ]; then
        printf '%s\n' "Copy config.yaml to workdir"
        cp config.yaml workdir/playground-one/
      fi
    fi
  fi
}

case $1 in
  update)
    pgoc_stop
    pgoc_update
    ;;
  stop|restart)
    pgoc_stop
    ;;&
  start|restart)
    pgoc_start
    ;;
esac

if [ "$(docker ps -q -f name=pgoc-${PGO_VERSION})" ]; then
  ssh -o StrictHostKeyChecking=no -p ${PORT} pgo@localhost
fi
