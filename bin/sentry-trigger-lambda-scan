#?/bin/bash

lambda=${LAMBDA:-none}
if [ "${lambda}" == "none" ] || [ "$1" == "help" ]; then
    printf '%s\n' "Please specify at least the lambda to be scanned."
    printf '%s\n' ""
    printf '%s\n' "Usage: LAMBDA=<lambda-name> [REGION=<aws-region>] sentry-trigger-lambda-scan"
    printf '%s\n' ""
    printf '%s\n' "Example:"
    printf '%s\n' "  LAMBDA=cloud-sentry-EbsResourceConsumer sentry-trigger-lambda-scan"
    exit 0
fi

resourceregion=${REGION:-$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')}
printf '%s\n' "Using region ${resourceregion}"

accountid=$(aws sts get-caller-identity | jq -r '.Account')
statemachinearn=$(aws stepfunctions list-state-machines --region ${resourceregion} | \
    jq -r '.stateMachines[] | select(.name | startswith("ScannerStateMachine-")) | .stateMachineArn')
printf '%s\n' "State machine is ${statemachinearn}"

lambdaarn=$(aws lambda get-function --function-name ${lambda} --region ${resourceregion} | \
    jq -r '.Configuration.FunctionArn')
printf '%s\n' "Lambda ARN is ${lambdaarn}"

resourcelocation=$(aws lambda get-function --function-name ${lambda} --region ${resourceregion} | \
    jq -r '.Code.Location')

uuid=$(uuidgen)
inputjson='{
    "ScanID": "'${accountid}'-'${uuid}'",
    "ResourceType": "aws-lambda-function",
    "ResourceLocation": "'${resourcelocation}'",
    "ResourceRegion": "'${resourceregion}'",
    "MetaData": {
        "AWSAccountID": "'${accountid}'",
        "FunctionARN": "'${lambdaarn}'",
        "FunctionName": "'${lambda}'"
    }
}'

printf '%s\n' "$(jq -r . <<< ${inputjson})"

aws stepfunctions start-execution \
    --name "aws-lambda-function-${accountid}-${uuid}-manual" \
    --state-machine-arn ${statemachinearn} \
    --region ${resourceregion} \
    --input "${inputjson}"
