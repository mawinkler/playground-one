<powershell>
Start-Transcript -Path 'C:/userdata.log'

$logfilepath="C:\agent.log"
# $username = 'admin'
# $password = ConvertTo-SecureString '${windows_ad_safe_password}' -AsPlainText -Force

# Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser -Force -ErrorAction Ignore
# $ErrorActionPreference = "stop"
Set-ExecutionPolicy unrestricted -Force

function Write-Log {
    param(
        [Parameter(Mandatory = $true)][string] $message,
        [Parameter(Mandatory = $false)]
        [ValidateSet("INFO","WARN","ERROR")]
        [string] $level = "INFO"
    )
    # Create timestamp
    $timestamp = (Get-Date).toString("yyyy/MM/dd HH:mm:ss")
    # Append content to log file
    Add-Content -Path $logfilepath -Value "$timestamp [$level] - $message"
}

# function Create-LocalAdmin {
#     process {
#         try {
#             # Create new local user
#             New-LocalUser "$username" -Password $password -FullName "$username" -Description "local admin" -ErrorAction stop
#             Write-Log -message "$username local user created"

#             # Add user to administrator group
#             Add-LocalGroupMember -Group "Administrators" -Member "$username" -ErrorAction stop
#             Write-Log -message "$username added to the Administrators group"

#         } catch{ Write-log -message $_.Exception.message -level "ERROR"}
#     }    
# }

# # Create local admin user
# Create-LocalAdmin 

net user Administrator "${windows_ad_safe_password}"

# if ("${windows_ad_domain_name}" -ne "") {
$hostname = hostname
if ("$hostname" -ne "${windows_ad_hostname}") {
    Write-Log -message "Changing Hostname to ${windows_ad_hostname}" -level "INFO"
    Rename-Computer -NewName ${windows_ad_hostname} -Force -Restart
} else {
    Write-Log -message "Hostname: $hostname" -level "INFO"
}
# } else {
#     Write-Log -message "Not changing host name" -level "INFO"
# }

# ${userdata_windows_winrm}

# ${userdata_windows_ssh}

# ${userdata_windows_aws}

# # Enable Firewall Rules
# # TODO: How to make this persistent with GPOs and AD?
# Set-NetFirewallRule -DisplayGroup 'Remote Event Log Management' -Enabled True -PassThru |
#   Select-Object -Property DisplayName, Enabled

# Set-NetFirewallRule -DisplayName 'COM+ Network Access (DCOM-In)' -Enabled True -PassThru |
#   Select-Object -Property DisplayName, Enabled

# # ###########################
# # Download from S3 bucket
# # ###########################
# $keyPrefix = "download"
# $localFolder = "C:\Users\Administrator\Downloads"

# # Get list of objects with the specified prefix
# $objects = Get-S3Object -BucketName ${s3_bucket} -KeyPrefix $keyPrefix

# # Iterate through each object and download it to the local folder
# foreach ($obj in $objects) {
#     # Remove the prefix from the object key to determine the local path
#     $relativePath = $obj.Key.Substring($keyPrefix.Length)

#     # Combine the local folder path with the relative object path
#     $localPath = Join-Path $localFolder $relativePath

#     # Ensure the directory structure exists
#     $localDir = Split-Path $localPath -Parent
#     if (-not (Test-Path $localDir)) {
#         New-Item -ItemType Directory -Path $localDir
#     }

#     # Download the object
#     Read-S3Object -BucketName ${s3_bucket} -Key $obj.Key -File $localPath
# }

${userdata_windows_join_ad}


Stop-Transcript
</powershell>
