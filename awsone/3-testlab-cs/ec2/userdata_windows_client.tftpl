<powershell>
Start-Transcript -Path 'C:/userdata.log'

$logfilepath="C:\agent.log"
# $username = 'admin'
# $password = ConvertTo-SecureString '${windows_ad_safe_password}' -AsPlainText -Force

# Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser -Force -ErrorAction Ignore
# $ErrorActionPreference = "stop"
Set-ExecutionPolicy unrestricted -Force

function Write-Log {
    param(
        [Parameter(Mandatory = $true)][string] $message,
        [Parameter(Mandatory = $false)]
        [ValidateSet("INFO","WARN","ERROR")]
        [string] $level = "INFO"
    )
    # Create timestamp
    $timestamp = (Get-Date).toString("yyyy/MM/dd HH:mm:ss")
    # Append content to log file
    Add-Content -Path $logfilepath -Value "$timestamp [$level] - $message"
}

net user Administrator "${windows_ad_safe_password}"

# function Create-LocalAdmin {
#     process {
#         try {
#             # Create new local user
#             New-LocalUser "$username" -Password $password -FullName "$username" -Description "local admin" -ErrorAction stop
#             Write-Log -message "$username local user created"

#             # Add user to administrator group
#             Add-LocalGroupMember -Group "Administrators" -Member "$username" -ErrorAction stop
#             Write-Log -message "$username added to the Administrators group"

#         } catch{ Write-log -message $_.Exception.message -level "ERROR"}
#     }    
# }

# # Create local admin user
# Create-LocalAdmin 

# Define script path
$taskPath = "C:\AWS\continue_userdata.ps1"
$taskName = "ContinueUserData"

# Save only the "post-reboot" portion of the script
$scriptContent = @'
$logfilepath="C:\agent.log"
Set-ExecutionPolicy unrestricted -Force

function Write-Log {
    param(
        [Parameter(Mandatory = $true)][string] $message,
        [Parameter(Mandatory = $false)]
        [ValidateSet("INFO","WARN","ERROR")]
        [string] $level = "INFO"
    )
    # Create timestamp
    $timestamp = (Get-Date).toString("yyyy/MM/dd HH:mm:ss")
    # Append content to log file
    Add-Content -Path $logfilepath -Value "$timestamp [$level] - $message"
}

# Wait for network and domain services to start
Start-Sleep -Seconds 60

# Example: Install a program after reboot
Write-Output "Resuming User Data Execution..." | Out-File C:\AWS\userdata.log -Append

${userdata_windows_join_ad}

# Remove Scheduled Task after it runs once
Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
'@

# Ensure directory exists and save script
New-Item -Path "C:\AWS" -ItemType Directory -Force
$scriptContent | Set-Content -LiteralPath $taskPath -Force

# Create a Scheduled Task to run after reboot
$Action = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-ExecutionPolicy Bypass -File $taskPath"
$Trigger = New-ScheduledTaskTrigger -AtStartup
$Settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -DontStopOnIdleEnd
Register-ScheduledTask -TaskName $taskName -Action $Action -Trigger $Trigger -Settings $Settings -User "SYSTEM" -RunLevel Highest


if ("${windows_ad_domain_name}" -ne "") {
    $hostname = hostname
    if ("$hostname" -ne "${windows_ad_hostname}") {
        Write-Log -message "Changing Hostname to ${windows_ad_hostname}" -level "INFO"
        Rename-Computer -NewName ${windows_ad_hostname} -Force
        # Restart to apply hostname change
        Restart-Computer -Force
    } else {
        Write-Log -message "Hostname: $hostname" -level "INFO"
    }
} else {
    Write-Log -message "Not changing host name" -level "INFO"
}

Stop-Transcript
</powershell>
