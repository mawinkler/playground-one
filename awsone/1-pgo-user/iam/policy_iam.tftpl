{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Action": [
				"iam:PassRole"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"application-autoscaling:DeleteScalingPolicy",
				"application-autoscaling:DeregisterScalableTarget",
				"application-autoscaling:DescribeScalableTargets",
				"application-autoscaling:DescribeScalingPolicies",
				"application-autoscaling:ListTagsForResource",
				"application-autoscaling:PutScalingPolicy",
				"application-autoscaling:RegisterScalableTarget",
				"application-autoscaling:TagResource",
				"autoscaling:DescribeAutoScalingGroups",
				"autoscaling:DescribeScalingActivities",
				"ec2:CreateTags",
				"ec2:DeleteKeyPair",
				"ec2:DeleteTags",
				"ec2:DescribeAddresses",
				"ec2:DescribeAddressesAttribute",
				"ec2:DescribeAvailabilityZones",
				"ec2:DescribeDhcpOptions",
				"ec2:DescribeImages",
				"ec2:DescribeInstanceCreditSpecifications",
				"ec2:DescribeInstances",
				"ec2:DescribeInstanceTypes",
				"ec2:DescribeInternetGateways",
				"ec2:DescribeKeyPairs",
				"ec2:DescribeLaunchTemplates",
				"ec2:DescribeLaunchTemplateVersions",
				"ec2:DescribeNatGateways",
				"ec2:DescribeNetworkAcls",
				"ec2:DescribeNetworkInterfaces",
				"ec2:DescribeRouteTables",
				"ec2:DescribeSecurityGroupRules",
				"ec2:DescribeSecurityGroups",
				"ec2:DescribeSubnets",
				"ec2:DescribeTags",
				"ec2:DescribeVolumes",
				"ec2:DescribeVpcs",
				"ec2:DisassociateAddress",
				"ec2:DisassociateRouteTable",
				"ec2:ReleaseAddress",
				"ecs:CreateCapacityProvider",
				"ecs:DeregisterTaskDefinition",
				"ecs:DescribeTaskDefinition",
				"ecs:RegisterTaskDefinition",
				"eks:CreateCluster",
				"eks:DescribeAddonVersions",
				"eks:TagResource",
				"elasticloadbalancing:CreateListener",
				"elasticloadbalancing:CreateLoadBalancer",
				"elasticloadbalancing:DescribeListeners",
				"elasticloadbalancing:DescribeLoadBalancerAttributes",
				"elasticloadbalancing:DescribeLoadBalancers",
				"elasticloadbalancing:DescribeTags",
				"elasticloadbalancing:DescribeTargetGroupAttributes",
				"elasticloadbalancing:DescribeTargetGroups",
				"kms:CreateKey",
				"kms:ListAliases",
				"kms:DeleteAlias",
				"logs:DescribeLogGroups",
				"logs:ListTagsForResource",
				"rds:AddTagsToResource",
				"rds:ListTagsForResource",
				"servicediscovery:CreateHttpNamespace",
				"servicediscovery:GetOperation",
				"servicediscovery:ListTagsForResource",
				"servicediscovery:TagResource",
				"sts:GetCallerIdentity"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"iam:AddRoleToInstanceProfile",
				"iam:AddUserToGroup",
				"iam:AttachGroupPolicy",
				"iam:AttachRolePolicy",
				"iam:CreateAccessKey",
				"iam:CreateGroup",
				"iam:CreateInstanceProfile",
				"iam:CreateOpenIDConnectProvider",
				"iam:CreatePolicy",
				"iam:CreateRole",
				"iam:CreateServiceLinkedRole",
				"iam:CreateUser",
				"iam:DeleteAccessKey",
				"iam:DeleteGroup",
				"iam:DeleteInstanceProfile",
				"iam:DeleteOpenIDConnectProvider",
				"iam:DeletePolicy",
				"iam:DeleteRole",
				"iam:DeleteRolePolicy",
				"iam:DeleteUser",
				"iam:DetachGroupPolicy",
				"iam:DetachRolePolicy",
				"iam:GetGroup",
				"iam:GetInstanceProfile",
				"iam:GetOpenIDConnectProvider",
				"iam:GetPolicy",
				"iam:GetPolicy",
				"iam:GetPolicyVersion",
				"iam:GetPolicyVersion",
				"iam:GetRole",
				"iam:GetRolePolicy",
				"iam:GetUser",
				"iam:ListAccessKeys",
				"iam:ListAttachedGroupPolicies",
				"iam:ListAttachedRolePolicies",
				"iam:ListEntitiesForPolicy",
				"iam:ListEntitiesForPolicy",
				"iam:ListGroupsForUser",
				"iam:ListInstanceProfilesForRole",
				"iam:ListPolicyVersions",
				"iam:ListPolicyVersions",
				"iam:ListRolePolicies",
				"iam:PutRolePolicy",
				"iam:RemoveRoleFromInstanceProfile",
				"iam:RemoveUserFromGroup",
				"iam:TagInstanceProfile",
				"iam:TagOpenIDConnectProvider",
				"iam:TagPolicy",
				"iam:TagRole"
			],
			"Resource": "arn:aws:iam::${Account}:*"
		}
	]
}